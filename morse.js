const MORSE_CODE_DICT = {
  'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 
  'F': '..-.', 'G': '--.', 'H': '....', 'I': '..', 'J': '.---', 
  'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---', 
  'P': '.--.', 'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-', 
  'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-', 'Y': '-.--', 
  'Z': '--..',

  'a': '.---.', 'b': '.--.-...', 'c': '...-.', 'd': '--.--.', 'e': '..--.',
  'f': '--.-.', 'g': '...--.', 'h': '.-.--', 'i': '--...', 'j': '.-...',
  'k': '..-.-.', 'l': '-.-.-', 'm': '....-.', 'n': '.--..', 'o': '-..--',
  'p': '....-', 'q': '.-.-.', 'r': '---.-.', 's': '..--', 't': '.-.-',
  'u': '--..-.', 'v': '....--', 'w': '-...-.', 'x': '.---..', 'y': '..----.',
  'z': '-.---.',

  '0': '-----', '1': '.----', '2': '..---', '3': '...--', 
  '4': '....-', '5': '.....', '6': '-....', '7': '--...', 
  '8': '---..', '9': '----.',

  '.': '.-.-.-', ',': '--..--', '?': '..--..', "'": '.----.', 
  '!': '-.-.--', '/': '-..-.', '(': '-.--.', ')': '-.--.-', 
  '&': '.-....', ':': '---...', ';': '-.-.-.', '=': '-...-', 
  '+': '.-.-.', '-': '-....-', '_': '..--.-', '"': '.-..-.', 
  '$': '...-..-', '@': '.--.-...', ' ': '/'
};

const REVERSE_MORSE_DICT = Object.fromEntries(
  Object.entries(MORSE_CODE_DICT).map(([k, v]) => [v, k])
);

function textToMorse(text) {
  return text.split('').map(c => MORSE_CODE_DICT[c] || '').join(' ');
}

function morseToText(morse) {
  return morse.split(' ').map(code => REVERSE_MORSE_DICT[code] || '').join('');
}

function isValidMorse(text) {
  return text.trim().split(' ').every(code => REVERSE_MORSE_DICT.hasOwnProperty(code));
}
